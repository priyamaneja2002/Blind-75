class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());
        for(int i = 0; i<nums.size(); i++){
            int goal = -nums[i];
            int start = i+1;
            int end = nums.size()-1;

            while(start<end){
                int sum = nums[start] + nums[end];

                if(sum < goal){
                    start++;
                }
                else if(sum > goal){
                    end--;
                }
                else{
                    vector<int> triplet = {nums[i], nums[start], nums[end]};
                    ans.push_back(triplet);

                    //to remove duplicates from 2nd position in triplet
                    while(start<end && nums[start]== triplet[1]) start++;

                    //to remove duplicates from 3rd position in triplet
                    while(start<end && nums[end]== triplet[2]) end--;
                }   
            }

            //to remove duplicates from 1st position in triplet
                while(i+1<nums.size() && nums[i+1] == nums[i]) i++;
        }
        return ans;
    }
};